# -*- coding: utf-8 -*-
"""cannabis_data_wraggling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uqO5xuUlvM23kTo-uaRYOZEbEgCPDXV7

Cannabis is a kind of  plant for medical or recreational use. it  can be used by extact products, smoking, vaporizing, food, and so on.

Our goal is to describe the established data source with at least rough data able to be provided on day one.
In research - by monday 27 april
Write a description for what the data science problem is. What uncertainty or prediction are you trying to discover? How could this data be used to find a solution to this problem?
"""

# Input data files are available in the "../input/" directory.
# running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

#import os
#for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
      print(os.path.join(dirname, filename))

import pandas as pd
import numpy as np
#df= pd.read_csv("/kaggle/input/cannabis-strains/cannabis.csv")

df = pd.read_csv("cannabis.csv")
print(df.shape)
df.head()

df.describe()

df['Type'].unique()

df['Type'].value_counts(ascending=False)

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import plotly.express as px
# %matplotlib inline













df['Rating'].unique()

df['Rating'].describe()

df['Rating'].value_counts(ascending=False)

import seaborn as sns
y= df['Rating']
sns.distplot(y);

sns.set(style="whitegrid")
ax = sns.violinplot(x='Type', y='Rating',showmeans=True, showextrema=True, showmedians=True, data=df)
ax.set_xticklabels(ax.get_xticklabels(),rotation=45);

# Get Pandas Profiling Report
!pip install pandas-profiling
import pandas_profiling as pp
pp.ProfileReport(df)

# all columns are objective.
df.select_dtypes(exclude="number").columns.tolist()

df.isnull().sum()

#df = df.dropna(how='all')

# Comparison barchart, hue="Area Type"
sns.barplot(x="Type", y='Rating',  data=df)
#ax.set_xticklabels(ax.get_xticklabels,rotation=15;
plt.xticks()

df['rating_best']= df['Rating'] >=4
df['rating_best'].sort_values(df['Rating'], ascending=False)

df["Flavor"] = df["Flavor"].fillna("None")

total_flavor = []
max_len = 0
total_flavor.append("None")
for val in df["Flavor"].values:
    print(val)
    val = val.split(",")
    
    if len(val) > max_len:
        max_len = len(val)
    
    for f in val:
        if f not in total_flavor:
            total_flavor.append(f)

len(total_flavor)

effects_list = pd.Series(v[0] for v in df['Effects'])
effects_list.unique()

len(total_effects)

df_tokenized= pd.read_csv("cannabis_tokenized.csv")
print(df_tokenized.shape)
df_tokenized.head()



with open(‘df.pkl’, ‘rb’) as f:
    dest_object_name = pickle.load(f)

